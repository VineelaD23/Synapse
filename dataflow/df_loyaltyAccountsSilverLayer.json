{
	"name": "df_loyaltyAccountsSilverLayer",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "synapsevineelad-WorkspaceDefaultStorage",
						"type": "LinkedServiceReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "AzureSqlDatabase1",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "filter1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          LoyaltyID as short,",
				"          CustomerID as short,",
				"          PointsEarned as short,",
				"          TierLevel as string,",
				"          JoinDate as date",
				"     ),",
				"     useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     fileSystem: 'project3',",
				"     folderPath: 'BronzeLayer',",
				"     fileName: 'LoyaltyAccounts.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> source1",
				"source1 filter(!isNull(CustomerID) && !isNull(LoyaltyID)) ~> filter1",
				"filter1 derive(TierLevel = iif(isNull(TierLevel) || lower(trim(TierLevel)) == 'null', 'unknown', TierLevel),",
				"          JoinDate = coalesce(JoinDate,toTimestamp('1900-01-01 00:00:00.000')),",
				"          PointsEarned = coalesce(PointsEarned, 0)) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          LoyaltyID as integer,",
				"          CustomerID as integer,",
				"          PointsEarned as integer,",
				"          TierLevel as string,",
				"          JoinDate as date",
				"     ),",
				"     format: 'table',",
				"     store: 'sqlserver',",
				"     schemaName: 'dbo',",
				"     tableName: 'LoyaltyAccounts',",
				"     insertable: true,",
				"     updateable: false,",
				"     deletable: false,",
				"     upsertable: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          LoyaltyID,",
				"          CustomerID,",
				"          PointsEarned,",
				"          TierLevel,",
				"          JoinDate",
				"     )) ~> sink1"
			]
		}
	}
}