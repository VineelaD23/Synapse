{
	"name": "df_storesSilverLayer",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "synapsevineelad-WorkspaceDefaultStorage",
						"type": "LinkedServiceReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "AzureSqlDatabase1",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "filter1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          StoreID as short,",
				"          Location as string,",
				"          Manager as string,",
				"          OpenHours as string",
				"     ),",
				"     useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     fileSystem: 'project3',",
				"     folderPath: 'BronzeLayer',",
				"     fileName: 'Stores.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> source1",
				"source1 filter(!isNull(StoreID)) ~> filter1",
				"filter1 derive(Location = iif(isNull(Location) || lower(trim(Location)) == 'null', 'unknown', Location),",
				"          Manager = iif(isNull(Manager) || lower(trim(Manager)) == 'null', 'unknown', Manager),",
				"          OpenHours = iif(isNull(OpenHours) || lower(trim(OpenHours)) == 'null', 'Closed', OpenHours)) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          StoreID as integer,",
				"          Location as string,",
				"          Manager as string,",
				"          OpenHours as string",
				"     ),",
				"     format: 'table',",
				"     store: 'sqlserver',",
				"     schemaName: 'dbo',",
				"     tableName: 'Stores',",
				"     insertable: true,",
				"     updateable: false,",
				"     deletable: false,",
				"     upsertable: false,",
				"     stagingSchemaName: '',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          StoreID,",
				"          Location,",
				"          Manager,",
				"          OpenHours",
				"     )) ~> sink1"
			]
		}
	}
}